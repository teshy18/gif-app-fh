{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAK,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMd,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SAnBa,SAACP,GAClBF,EAAcE,EAAEQ,OAAOF,QAmBnBG,YAAY,c,+BC7BXC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,gDAEmCC,UAAUH,GAF7C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAM,SAAAC,GACpB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,IAAnBb,EAAkB,EAAlBA,IAAMU,EAAY,EAAZA,MAGhC,OACI,sBAAKI,UAAU,2EAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,mBAAGI,UAAU,oCAAb,SAAkDJ,QCDjDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGrB,ECLwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAQ,IAFZ,mBAAO3B,EAAP,KAAc4B,EAAd,KAmBA,OAZAC,qBAAU,WACNvB,EAAQC,GACPuB,MAAK,SAACC,GAEHH,EAAS,CACLd,KAAKiB,EACLJ,SAAQ,SAIjB,CAACpB,IAEGP,EDhByBgC,CAAazB,GAAhCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OAEI,qCACI,oBAAIJ,UAAU,uDAAd,SAAsEhB,IAGrEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAK,SAACC,GAAD,OACT,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEpBhBe,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,YAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OAAQ,qCACJ,oBAAIgC,UAAU,QAAd,0BAEA,cAAC,EAAD,CAAahC,cAAeA,IAE5B,uBAGA,6BACK2C,EAAWlB,KAAI,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CACIA,SAAUA,GACHA,Y,MCb3B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.12ca011f.chunk.js","sourcesContent":["import React, {useState}from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n    \r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 1){\r\n        setCategories(state => [inputValue,...state]);\r\n        setInputValue('');\r\n        };\r\n    };\r\n    \r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n            type='text'\r\n            value= {inputValue}\r\n            onChange={handleChange}\r\n            placeholder='Buscar'\r\n            >\r\n\r\n            </input>\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes ={\r\n setCategories : PropTypes.func.isRequired,\r\n}","export const getGifs = async( category )=>{\r\n        \r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=nFnCMMzAWk0XBazBcMD9X88fuQXizDCx`;\r\n\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ( {url , title} ) => {\r\n   \r\n   \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-1s animate__slower\">\r\n            <img src={url} alt={title}></img>\r\n            <p className='animate__animated animate__fadeIn'>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react';\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    \r\n    const { data:images ,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className='category animate__animated animate__rotateInDownLeft'>{category}</h3>\r\n            \r\n\r\n            {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                images.map( (img) => \r\n                  (<GifGridItem \r\n                    key={img.id}\r\n                    {...img}/>)\r\n                   )\r\n                }      \r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    \r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then((imgs)=>{\r\n                            \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n               \r\n        })        \r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n};\r\n","import React , {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = ()=>{\r\n\r\n    const [categories, setCategories] = useState(['Pokemon']);\r\n\r\n    return (<>\r\n        <h2 className='title'>GifExpertApp</h2>\r\n        \r\n        <AddCategory setCategories={setCategories} />\r\n\r\n        <hr/>\r\n\r\n        \r\n        <ol>\r\n            {categories.map(category =>\r\n                \r\n                <GifGrid \r\n                    category={category} \r\n                    key = {category}\r\n                />\r\n            \r\n            )}\r\n        </ol>\r\n\r\n    </>);\r\n\r\n\r\n\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}